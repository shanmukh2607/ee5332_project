

================================================================
== Vitis HLS Report for 'fir'
================================================================
* Date:           Mon May 16 17:28:44 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        democode
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  5.690 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       94|       94|  0.752 us|  0.752 us|   95|   95|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- shift_accum_loop  |       90|       90|         6|          -|          -|    15|        no|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 5 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.69>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%x_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %x" [demo.cpp:6]   --->   Operation 11 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [3/3] (5.69ns)   --->   "%acc = mul i32 %x_read, i32 11" [demo.cpp:12]   --->   Operation 12 'mul' 'acc' <Predicate = true> <Delay = 5.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 5.69>
ST_2 : Operation 13 [2/3] (5.69ns)   --->   "%acc = mul i32 %x_read, i32 11" [demo.cpp:12]   --->   Operation 13 'mul' 'acc' <Predicate = true> <Delay = 5.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.69>
ST_3 : Operation 14 [1/3] (5.69ns)   --->   "%acc = mul i32 %x_read, i32 11" [demo.cpp:12]   --->   Operation 14 'mul' 'acc' <Predicate = true> <Delay = 5.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 1.61>
ST_4 : Operation 15 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 15 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %y"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %y, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 18 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %x"   --->   Operation 18 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %x, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 20 [1/1] (1.61ns)   --->   "%br_ln14 = br void" [demo.cpp:14]   --->   Operation 20 'br' 'br_ln14' <Predicate = true> <Delay = 1.61>

State 5 <SV = 4> <Delay = 3.92>
ST_5 : Operation 21 [1/1] (0.00ns)   --->   "%i = phi i4 %add_ln14, void %.split, i4 15, void" [demo.cpp:14]   --->   Operation 21 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 22 [1/1] (0.00ns)   --->   "%acc_1 = phi i32 %acc_2, void %.split, i32 %acc, void"   --->   Operation 22 'phi' 'acc_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i4 %i" [demo.cpp:14]   --->   Operation 23 'zext' 'zext_ln14' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 24 [1/1] (1.44ns)   --->   "%icmp_ln14 = icmp_eq  i4 %i, i4 0" [demo.cpp:14]   --->   Operation 24 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 1.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 25 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 15, i64 15, i64 15"   --->   Operation 25 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln14 = br i1 %icmp_ln14, void %.split, void" [demo.cpp:14]   --->   Operation 26 'br' 'br_ln14' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 27 [1/1] (1.77ns)   --->   "%add_ln14 = add i4 %i, i4 15" [demo.cpp:14]   --->   Operation 27 'add' 'add_ln14' <Predicate = (!icmp_ln14)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i4 %add_ln14" [demo.cpp:16]   --->   Operation 28 'zext' 'zext_ln16' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_5 : Operation 29 [1/1] (0.00ns)   --->   "%shift_reg_addr = getelementptr i32 %shift_reg, i64 0, i64 %zext_ln16" [demo.cpp:16]   --->   Operation 29 'getelementptr' 'shift_reg_addr' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_5 : Operation 30 [2/2] (2.15ns)   --->   "%shift_reg_load = load i4 %shift_reg_addr" [demo.cpp:16]   --->   Operation 30 'load' 'shift_reg_load' <Predicate = (!icmp_ln14)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_5 : Operation 31 [1/1] (0.00ns)   --->   "%fir_int_int_c_addr = getelementptr i32 %fir_int_int_c, i64 0, i64 %zext_ln14" [demo.cpp:17]   --->   Operation 31 'getelementptr' 'fir_int_int_c_addr' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_5 : Operation 32 [2/2] (2.15ns)   --->   "%fir_int_int_c_load = load i4 %fir_int_int_c_addr" [demo.cpp:17]   --->   Operation 32 'load' 'fir_int_int_c_load' <Predicate = (!icmp_ln14)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 16> <ROM>
ST_5 : Operation 33 [1/1] (0.00ns)   --->   "%write_ln19 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %y, i32 %acc_1" [demo.cpp:19]   --->   Operation 33 'write' 'write_ln19' <Predicate = (icmp_ln14)> <Delay = 0.00>
ST_5 : Operation 34 [1/1] (0.00ns)   --->   "%ret_ln20 = ret" [demo.cpp:20]   --->   Operation 34 'ret' 'ret_ln20' <Predicate = (icmp_ln14)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 4.30>
ST_6 : Operation 35 [1/2] (2.15ns)   --->   "%shift_reg_load = load i4 %shift_reg_addr" [demo.cpp:16]   --->   Operation 35 'load' 'shift_reg_load' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_6 : Operation 36 [1/1] (0.00ns)   --->   "%shift_reg_addr_1 = getelementptr i32 %shift_reg, i64 0, i64 %zext_ln14" [demo.cpp:16]   --->   Operation 36 'getelementptr' 'shift_reg_addr_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 37 [1/1] (2.15ns)   --->   "%store_ln16 = store i32 %shift_reg_load, i4 %shift_reg_addr_1" [demo.cpp:16]   --->   Operation 37 'store' 'store_ln16' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_6 : Operation 38 [1/2] (2.15ns)   --->   "%fir_int_int_c_load = load i4 %fir_int_int_c_addr" [demo.cpp:17]   --->   Operation 38 'load' 'fir_int_int_c_load' <Predicate = true> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 16> <ROM>

State 7 <SV = 6> <Delay = 5.69>
ST_7 : Operation 39 [3/3] (5.69ns)   --->   "%mul_ln17 = mul i32 %fir_int_int_c_load, i32 %shift_reg_load" [demo.cpp:17]   --->   Operation 39 'mul' 'mul_ln17' <Predicate = true> <Delay = 5.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.69>
ST_8 : Operation 40 [2/3] (5.69ns)   --->   "%mul_ln17 = mul i32 %fir_int_int_c_load, i32 %shift_reg_load" [demo.cpp:17]   --->   Operation 40 'mul' 'mul_ln17' <Predicate = true> <Delay = 5.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 5.69>
ST_9 : Operation 41 [1/3] (5.69ns)   --->   "%mul_ln17 = mul i32 %fir_int_int_c_load, i32 %shift_reg_load" [demo.cpp:17]   --->   Operation 41 'mul' 'mul_ln17' <Predicate = true> <Delay = 5.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 2.70>
ST_10 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln9 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [demo.cpp:9]   --->   Operation 42 'specloopname' 'specloopname_ln9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 43 [1/1] (2.70ns)   --->   "%acc_2 = add i32 %mul_ln17, i32 %acc_1" [demo.cpp:17]   --->   Operation 43 'add' 'acc_2' <Predicate = true> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 44 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 2.16ns.

 <State 1>: 5.69ns
The critical path consists of the following:
	wire read on port 'x' (demo.cpp:6) [12]  (0 ns)
	'mul' operation ('acc', demo.cpp:12) [13]  (5.69 ns)

 <State 2>: 5.69ns
The critical path consists of the following:
	'mul' operation ('acc', demo.cpp:12) [13]  (5.69 ns)

 <State 3>: 5.69ns
The critical path consists of the following:
	'mul' operation ('acc', demo.cpp:12) [13]  (5.69 ns)

 <State 4>: 1.61ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', demo.cpp:14) with incoming values : ('add_ln14', demo.cpp:14) [16]  (1.61 ns)

 <State 5>: 3.93ns
The critical path consists of the following:
	'phi' operation ('i', demo.cpp:14) with incoming values : ('add_ln14', demo.cpp:14) [16]  (0 ns)
	'add' operation ('add_ln14', demo.cpp:14) [23]  (1.78 ns)
	'getelementptr' operation ('shift_reg_addr', demo.cpp:16) [26]  (0 ns)
	'load' operation ('shift_reg_load', demo.cpp:16) on array 'shift_reg' [27]  (2.15 ns)

 <State 6>: 4.3ns
The critical path consists of the following:
	'load' operation ('shift_reg_load', demo.cpp:16) on array 'shift_reg' [27]  (2.15 ns)
	'store' operation ('store_ln16', demo.cpp:16) of variable 'shift_reg_load', demo.cpp:16 on array 'shift_reg' [29]  (2.15 ns)

 <State 7>: 5.69ns
The critical path consists of the following:
	'mul' operation ('mul_ln17', demo.cpp:17) [32]  (5.69 ns)

 <State 8>: 5.69ns
The critical path consists of the following:
	'mul' operation ('mul_ln17', demo.cpp:17) [32]  (5.69 ns)

 <State 9>: 5.69ns
The critical path consists of the following:
	'mul' operation ('mul_ln17', demo.cpp:17) [32]  (5.69 ns)

 <State 10>: 2.7ns
The critical path consists of the following:
	'add' operation ('acc', demo.cpp:17) [33]  (2.7 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
