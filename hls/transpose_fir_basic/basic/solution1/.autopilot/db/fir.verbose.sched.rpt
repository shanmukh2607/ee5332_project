

================================================================
== Vitis HLS Report for 'fir'
================================================================
* Date:           Mon May 16 17:54:58 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        basic
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.860 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       36|       36|  0.360 us|  0.360 us|   37|   37|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- broadcast_loop  |       32|       32|         5|          2|          2|    15|       yes|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 2, D = 5, States = { 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 7 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 2 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.61>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 10 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %in_r"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %in_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %out_r"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %out_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%in_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %in_r" [fir.cpp:8]   --->   Operation 15 'read' 'in_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specmemcore_ln10 = specmemcore void @_ssdm_op_SpecMemCore, i32 %Acc, i64 666, i64 210, i64 18446744073709551615" [fir.cpp:10]   --->   Operation 16 'specmemcore' 'specmemcore_ln10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.61ns)   --->   "%br_ln16 = br void" [fir.cpp:16]   --->   Operation 17 'br' 'br_ln16' <Predicate = true> <Delay = 1.61>

State 2 <SV = 1> <Delay = 2.15>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%j = phi i4 %add_ln16, void %.split, i4 15, void" [fir.cpp:16]   --->   Operation 18 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.44ns)   --->   "%icmp_ln16 = icmp_eq  i4 %j, i4 0" [fir.cpp:16]   --->   Operation 19 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 1.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 15, i64 15, i64 15"   --->   Operation 20 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln16 = br i1 %icmp_ln16, void %.split, void" [fir.cpp:16]   --->   Operation 21 'br' 'br_ln16' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i4 %j" [fir.cpp:16]   --->   Operation 22 'zext' 'zext_ln16' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%fir_int_int_w_addr = getelementptr i32 %fir_int_int_w, i64 0, i64 %zext_ln16" [fir.cpp:20]   --->   Operation 23 'getelementptr' 'fir_int_int_w_addr' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_2 : Operation 24 [2/2] (2.15ns)   --->   "%fir_int_int_w_load = load i4 %fir_int_int_w_addr" [fir.cpp:20]   --->   Operation 24 'load' 'fir_int_int_w_load' <Predicate = (!icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 16> <ROM>

State 3 <SV = 2> <Delay = 2.15>
ST_3 : Operation 25 [1/1] (1.77ns)   --->   "%add_ln16 = add i4 %j, i4 15" [fir.cpp:16]   --->   Operation 25 'add' 'add_ln16' <Predicate = (!icmp_ln16)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/2] (2.15ns)   --->   "%fir_int_int_w_load = load i4 %fir_int_int_w_addr" [fir.cpp:20]   --->   Operation 26 'load' 'fir_int_int_w_load' <Predicate = (!icmp_ln16)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 16> <ROM>

State 4 <SV = 3> <Delay = 6.86>
ST_4 : Operation 27 [2/2] (6.86ns)   --->   "%mul_ln20 = mul i32 %fir_int_int_w_load, i32 %in_read" [fir.cpp:20]   --->   Operation 27 'mul' 'mul_ln20' <Predicate = (!icmp_ln16)> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i4 %add_ln16" [fir.cpp:20]   --->   Operation 28 'zext' 'zext_ln20' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%Acc_addr = getelementptr i32 %Acc, i64 0, i64 %zext_ln20" [fir.cpp:20]   --->   Operation 29 'getelementptr' 'Acc_addr' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 30 [2/2] (3.25ns)   --->   "%Acc_load = load i4 %Acc_addr" [fir.cpp:20]   --->   Operation 30 'load' 'Acc_load' <Predicate = (!icmp_ln16)> <Delay = 3.25> <CoreInst = "RAM_T2P_BRAM">   --->   Core 94 'RAM_T2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 5 <SV = 4> <Delay = 6.86>
ST_5 : Operation 31 [1/2] (6.86ns)   --->   "%mul_ln20 = mul i32 %fir_int_int_w_load, i32 %in_read" [fir.cpp:20]   --->   Operation 31 'mul' 'mul_ln20' <Predicate = (!icmp_ln16)> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 32 [1/2] (3.25ns)   --->   "%Acc_load = load i4 %Acc_addr" [fir.cpp:20]   --->   Operation 32 'load' 'Acc_load' <Predicate = (!icmp_ln16)> <Delay = 3.25> <CoreInst = "RAM_T2P_BRAM">   --->   Core 94 'RAM_T2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 6 <SV = 5> <Delay = 5.95>
ST_6 : Operation 33 [1/1] (0.00ns)   --->   "%specpipeline_ln14 = specpipeline void @_ssdm_op_SpecPipeline, i32 2, i32 0, i32 0, i32 0, void @empty_0" [fir.cpp:14]   --->   Operation 33 'specpipeline' 'specpipeline_ln14' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_6 : Operation 34 [1/1] (0.00ns)   --->   "%specloopname_ln14 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [fir.cpp:14]   --->   Operation 34 'specloopname' 'specloopname_ln14' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_6 : Operation 35 [1/1] (2.70ns)   --->   "%add_ln20 = add i32 %Acc_load, i32 %mul_ln20" [fir.cpp:20]   --->   Operation 35 'add' 'add_ln20' <Predicate = (!icmp_ln16)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 36 [1/1] (0.00ns)   --->   "%Acc_addr_1 = getelementptr i32 %Acc, i64 0, i64 %zext_ln16" [fir.cpp:20]   --->   Operation 36 'getelementptr' 'Acc_addr_1' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_6 : Operation 37 [1/1] (3.25ns)   --->   "%store_ln20 = store i32 %add_ln20, i4 %Acc_addr_1" [fir.cpp:20]   --->   Operation 37 'store' 'store_ln20' <Predicate = (!icmp_ln16)> <Delay = 3.25> <CoreInst = "RAM_T2P_BRAM">   --->   Core 94 'RAM_T2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_6 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 38 'br' 'br_ln0' <Predicate = (!icmp_ln16)> <Delay = 0.00>

State 7 <SV = 2> <Delay = 6.86>
ST_7 : Operation 39 [2/2] (6.86ns)   --->   "%mul_ln22 = mul i32 %in_read, i32 11" [fir.cpp:22]   --->   Operation 39 'mul' 'mul_ln22' <Predicate = true> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 3> <Delay = 6.86>
ST_8 : Operation 40 [1/2] (6.86ns)   --->   "%mul_ln22 = mul i32 %in_read, i32 11" [fir.cpp:22]   --->   Operation 40 'mul' 'mul_ln22' <Predicate = true> <Delay = 6.86> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.86> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 41 [2/2] (3.25ns)   --->   "%Acc_load_1 = load i32 15" [fir.cpp:23]   --->   Operation 41 'load' 'Acc_load_1' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM_T2P_BRAM">   --->   Core 94 'RAM_T2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 9 <SV = 4> <Delay = 3.25>
ST_9 : Operation 42 [1/1] (3.25ns)   --->   "%store_ln22 = store i32 %mul_ln22, i32 0" [fir.cpp:22]   --->   Operation 42 'store' 'store_ln22' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM_T2P_BRAM">   --->   Core 94 'RAM_T2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_9 : Operation 43 [1/2] (3.25ns)   --->   "%Acc_load_1 = load i32 15" [fir.cpp:23]   --->   Operation 43 'load' 'Acc_load_1' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM_T2P_BRAM">   --->   Core 94 'RAM_T2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_9 : Operation 44 [1/1] (0.00ns)   --->   "%write_ln23 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %out_r, i32 %Acc_load_1" [fir.cpp:23]   --->   Operation 44 'write' 'write_ln23' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 45 [1/1] (0.00ns)   --->   "%ret_ln24 = ret" [fir.cpp:24]   --->   Operation 45 'ret' 'ret_ln24' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.61ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j', fir.cpp:16) with incoming values : ('add_ln16', fir.cpp:16) [16]  (1.61 ns)

 <State 2>: 2.15ns
The critical path consists of the following:
	'phi' operation ('j', fir.cpp:16) with incoming values : ('add_ln16', fir.cpp:16) [16]  (0 ns)
	'getelementptr' operation ('fir_int_int_w_addr', fir.cpp:20) [25]  (0 ns)
	'load' operation ('fir_int_int_w_load', fir.cpp:20) on array 'fir_int_int_w' [26]  (2.15 ns)

 <State 3>: 2.15ns
The critical path consists of the following:
	'load' operation ('fir_int_int_w_load', fir.cpp:20) on array 'fir_int_int_w' [26]  (2.15 ns)

 <State 4>: 6.86ns
The critical path consists of the following:
	'mul' operation ('mul_ln20', fir.cpp:20) [27]  (6.86 ns)

 <State 5>: 6.86ns
The critical path consists of the following:
	'mul' operation ('mul_ln20', fir.cpp:20) [27]  (6.86 ns)

 <State 6>: 5.96ns
The critical path consists of the following:
	'add' operation ('add_ln20', fir.cpp:20) [31]  (2.7 ns)
	'store' operation ('store_ln20', fir.cpp:20) of variable 'add_ln20', fir.cpp:20 on array 'Acc' [33]  (3.26 ns)

 <State 7>: 6.86ns
The critical path consists of the following:
	'mul' operation ('mul_ln22', fir.cpp:22) [36]  (6.86 ns)

 <State 8>: 6.86ns
The critical path consists of the following:
	'mul' operation ('mul_ln22', fir.cpp:22) [36]  (6.86 ns)

 <State 9>: 3.26ns
The critical path consists of the following:
	'store' operation ('store_ln22', fir.cpp:22) of variable 'mul_ln22', fir.cpp:22 on array 'Acc' [37]  (3.26 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
