

================================================================
== Vitis HLS Report for 'fir'
================================================================
* Date:           Wed May 11 20:21:40 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        democode
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.304 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       18|       18|  0.180 us|  0.180 us|   19|   19|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- shift_accum_loop  |       13|       13|         5|          1|          1|    10|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 10 8 
8 --> 9 
9 --> 5 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.15>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%x_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %x" [demo.cpp:6]   --->   Operation 11 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [4/4] (2.15ns) (root node of the DSP)   --->   "%acc_V = mul i16 %x_read, i16 53"   --->   Operation 12 'mul' 'acc_V' <Predicate = true> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 2 <SV = 1> <Delay = 2.15>
ST_2 : Operation 13 [3/4] (2.15ns) (root node of the DSP)   --->   "%acc_V = mul i16 %x_read, i16 53"   --->   Operation 13 'mul' 'acc_V' <Predicate = true> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 2.15>
ST_3 : Operation 14 [2/4] (2.15ns) (root node of the DSP)   --->   "%acc_V = mul i16 %x_read, i16 53"   --->   Operation 14 'mul' 'acc_V' <Predicate = true> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 1.61>
ST_4 : Operation 15 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 15 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %y"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %y, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 18 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %x"   --->   Operation 18 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %x, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 20 [1/4] (0.00ns) (root node of the DSP)   --->   "%acc_V = mul i16 %x_read, i16 53"   --->   Operation 20 'mul' 'acc_V' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 21 [1/1] (1.61ns)   --->   "%br_ln14 = br void" [demo.cpp:14]   --->   Operation 21 'br' 'br_ln14' <Predicate = true> <Delay = 1.61>

State 5 <SV = 4> <Delay = 3.92>
ST_5 : Operation 22 [1/1] (0.00ns)   --->   "%i = phi i4 %add_ln14, void %.split, i4 10, void" [demo.cpp:14]   --->   Operation 22 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 23 [1/1] (1.44ns)   --->   "%icmp_ln14 = icmp_eq  i4 %i, i4 0" [demo.cpp:14]   --->   Operation 23 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 1.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln14 = br i1 %icmp_ln14, void %.split, void" [demo.cpp:14]   --->   Operation 24 'br' 'br_ln14' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 25 [1/1] (1.77ns)   --->   "%add_ln14 = add i4 %i, i4 15" [demo.cpp:14]   --->   Operation 25 'add' 'add_ln14' <Predicate = (!icmp_ln14)> <Delay = 1.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 26 [1/1] (0.00ns)   --->   "%i_cast1 = zext i4 %i" [demo.cpp:14]   --->   Operation 26 'zext' 'i_cast1' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_5 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln15 = zext i4 %add_ln14" [demo.cpp:15]   --->   Operation 27 'zext' 'zext_ln15' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_5 : Operation 28 [1/1] (0.00ns)   --->   "%shift_reg_V_addr = getelementptr i16 %shift_reg_V, i64 0, i64 %zext_ln15" [demo.cpp:15]   --->   Operation 28 'getelementptr' 'shift_reg_V_addr' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_5 : Operation 29 [2/2] (2.15ns)   --->   "%shift_reg_V_load = load i4 %shift_reg_V_addr" [demo.cpp:15]   --->   Operation 29 'load' 'shift_reg_V_load' <Predicate = (!icmp_ln14)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 11> <RAM>
ST_5 : Operation 30 [1/1] (0.00ns)   --->   "%c_addr = getelementptr i10 %c, i64 0, i64 %i_cast1"   --->   Operation 30 'getelementptr' 'c_addr' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_5 : Operation 31 [2/2] (2.15ns)   --->   "%c_load = load i4 %c_addr"   --->   Operation 31 'load' 'c_load' <Predicate = (!icmp_ln14)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 11> <ROM>

State 6 <SV = 5> <Delay = 4.30>
ST_6 : Operation 32 [1/1] (0.00ns)   --->   "%shift_reg_V_addr_1 = getelementptr i16 %shift_reg_V, i64 0, i64 %i_cast1" [demo.cpp:15]   --->   Operation 32 'getelementptr' 'shift_reg_V_addr_1' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_6 : Operation 33 [1/2] (2.15ns)   --->   "%shift_reg_V_load = load i4 %shift_reg_V_addr" [demo.cpp:15]   --->   Operation 33 'load' 'shift_reg_V_load' <Predicate = (!icmp_ln14)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 11> <RAM>
ST_6 : Operation 34 [1/1] (2.15ns)   --->   "%store_ln15 = store i16 %shift_reg_V_load, i4 %shift_reg_V_addr_1" [demo.cpp:15]   --->   Operation 34 'store' 'store_ln15' <Predicate = (!icmp_ln14)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 11> <RAM>
ST_6 : Operation 35 [1/2] (2.15ns)   --->   "%c_load = load i4 %c_addr"   --->   Operation 35 'load' 'c_load' <Predicate = (!icmp_ln14)> <Delay = 2.15> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 11> <ROM>
ST_6 : Operation 36 [1/1] (0.00ns)   --->   "%sext_ln691 = sext i10 %c_load"   --->   Operation 36 'sext' 'sext_ln691' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_6 : Operation 37 [3/3] (1.45ns) (grouped into DSP with root node acc_V_2)   --->   "%mul_ln691 = mul i16 %shift_reg_V_load, i16 %sext_ln691"   --->   Operation 37 'mul' 'mul_ln691' <Predicate = (!icmp_ln14)> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 2.10>
ST_7 : Operation 38 [1/1] (0.00ns)   --->   "%acc_V_1 = phi i16 %acc_V_2, void %.split, i16 %acc_V, void"   --->   Operation 38 'phi' 'acc_V_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 39 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 39 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 40 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10"   --->   Operation 40 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 41 [2/3] (1.45ns) (grouped into DSP with root node acc_V_2)   --->   "%mul_ln691 = mul i16 %shift_reg_V_load, i16 %sext_ln691"   --->   Operation 41 'mul' 'mul_ln691' <Predicate = (!icmp_ln14)> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 2.10>
ST_8 : Operation 42 [1/3] (0.00ns) (grouped into DSP with root node acc_V_2)   --->   "%mul_ln691 = mul i16 %shift_reg_V_load, i16 %sext_ln691"   --->   Operation 42 'mul' 'mul_ln691' <Predicate = (!icmp_ln14)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 43 [2/2] (2.10ns) (root node of the DSP)   --->   "%acc_V_2 = add i16 %mul_ln691, i16 %acc_V_1"   --->   Operation 43 'add' 'acc_V_2' <Predicate = (!icmp_ln14)> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 9 <SV = 8> <Delay = 4.20>
ST_9 : Operation 44 [1/1] (0.00ns)   --->   "%specloopname_ln9 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [demo.cpp:9]   --->   Operation 44 'specloopname' 'specloopname_ln9' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_9 : Operation 45 [1/2] (2.10ns) (root node of the DSP)   --->   "%acc_V_2 = add i16 %mul_ln691, i16 %acc_V_1"   --->   Operation 45 'add' 'acc_V_2' <Predicate = (!icmp_ln14)> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 46 'br' 'br_ln0' <Predicate = (!icmp_ln14)> <Delay = 0.00>

State 10 <SV = 7> <Delay = 0.00>
ST_10 : Operation 47 [1/1] (0.00ns)   --->   "%write_ln18 = write void @_ssdm_op_Write.ap_auto.i16P0A, i16 %y, i16 %acc_V_1" [demo.cpp:18]   --->   Operation 47 'write' 'write_ln18' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 48 [1/1] (0.00ns)   --->   "%ret_ln19 = ret" [demo.cpp:19]   --->   Operation 48 'ret' 'ret_ln19' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 2.15ns
The critical path consists of the following:
	wire read on port 'x' (demo.cpp:6) [12]  (0 ns)
	'mul' operation of DSP[13] ('acc.V') [13]  (2.15 ns)

 <State 2>: 2.15ns
The critical path consists of the following:
	'mul' operation of DSP[13] ('acc.V') [13]  (2.15 ns)

 <State 3>: 2.15ns
The critical path consists of the following:
	'mul' operation of DSP[13] ('acc.V') [13]  (2.15 ns)

 <State 4>: 1.61ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', demo.cpp:14) with incoming values : ('add_ln14', demo.cpp:14) [16]  (1.61 ns)

 <State 5>: 3.93ns
The critical path consists of the following:
	'phi' operation ('i', demo.cpp:14) with incoming values : ('add_ln14', demo.cpp:14) [16]  (0 ns)
	'add' operation ('add_ln14', demo.cpp:14) [23]  (1.78 ns)
	'getelementptr' operation ('shift_reg_V_addr', demo.cpp:15) [27]  (0 ns)
	'load' operation ('shift_reg_V_load', demo.cpp:15) on array 'shift_reg_V' [29]  (2.15 ns)

 <State 6>: 4.3ns
The critical path consists of the following:
	'load' operation ('shift_reg_V_load', demo.cpp:15) on array 'shift_reg_V' [29]  (2.15 ns)
	'store' operation ('store_ln15', demo.cpp:15) of variable 'shift_reg_V_load', demo.cpp:15 on array 'shift_reg_V' [30]  (2.15 ns)

 <State 7>: 2.1ns
The critical path consists of the following:
	'phi' operation ('acc.V') with incoming values : ('acc.V') [17]  (0 ns)
	'add' operation of DSP[35] ('acc.V') [35]  (2.1 ns)

 <State 8>: 2.1ns
The critical path consists of the following:
	'mul' operation of DSP[35] ('mul_ln691') [34]  (0 ns)
	'add' operation of DSP[35] ('acc.V') [35]  (2.1 ns)

 <State 9>: 4.2ns
The critical path consists of the following:
	'add' operation of DSP[35] ('acc.V') [35]  (2.1 ns)
	'phi' operation ('acc.V') with incoming values : ('acc.V') [17]  (0 ns)
	'add' operation of DSP[35] ('acc.V') [35]  (2.1 ns)

 <State 10>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
